name: Install VulkanSDK

inputs:
  version:
    required: true
    description: The version of the VulkanSDK to build. use 'latest' to use the live development option.

  build-tests: 
    required: false
    description: Build the tests or not
    default: OFF

runs:
  using: 'composite'

  steps:
    - uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/gtest
          ${{github.workspace}}/vk_cache
        key: __${{runner.os}}vulkan${{inputs.version}}_
        restore-keys: |
          __${{runner.os}}vulkan__
          __vulkan__

    - name: Install Dependencies
      shell: bash
      run: |
        if [[ $RUNNER_OS == "Linux" ]]; then
          echo "Installing Dependencies"
        fi

    - name: Build Directory Structure
      shell: bash
      run: |
        cd ${{ github.workspace }}
        if [[ ! -d "vk_cache" ]]; then
          echo "Creating vk_cache directory"
          mkdir vk_cache
        fi
        cd vk_cache
        if [[ ! -d "build" ]]; then
          mkdir build
        fi
        if [[ ! -d "install" ]]; then
          mkdir install
        fi

    - name: Clone and Build GTest
      shell: bash
      run: |
        cd ${{ github.workspace }}
        if [[ ! -d "gtest" ]]; then
          git clone https://github.com/google/googletest gtest
        else
          cd gtest
          git pull
          cd ..
        fi
        cmake -Sgtest -Bvk_cache/build/gtest -DCMAKE_BUILD_TYPE=RelWithDebInfo
        sudo cmake --build vk_cache/build/gtest --target install

    - name: Clone and Build Robin-Hood-Hashing
      shell: bash
      run: |
        cd ${{ github.workspace }}
        if [[ ! -d "rrhash" ]]; then
          git clone https://github.com/martinus/robin-hood-hashing rrhash
        else
          cd rrhash
          git pull
          cd ..
        fi
        cmake -Srrhash -Bvk_cache/build/rrhash -DCMAKE_BUILD_TYPE=RelWithDebInfo
        sudo cmake --build vk_cache/build/rrhash --target install
        
    - name: Clone and Build Vulkan-Headers
      shell: bash
      run: |
        cd ${{ github.workspace }}/vk_cache
        if [[ ! -d "vk_headers" ]]; then
          git clone https://github.com/KhronosGroup/Vulkan-Headers vk_headers
        else
          cd vk_headers
          git pull
          cd ..
        fi
        cmake -Svk_headers -Bbuild/vk_headers -DCMAKE_INSTALL_DIR=${{github.workspace}}/vk_cache/install
        cmake --build build/vk_headers --target install
        
    #- name: Clone and Build SPIRV-Headers
    #- name: Clone and Build SPIRV-Tools
    #- name: Clone and Build glslang
    #- name: Clone and Build Vulkan-Loader
    #- name: Clone and Build Vulkan-ValidationLayers
    #- name: Clone and Build MoltenVK
    #- name: Clone and Build Vulkan-Tools
    #- name: Clone and Build Vulkan-Hpp
    #- name: Clone and Build Vulkan-ExtensionLayer
    #- name: Clone and Build SPIRV-Reflect
    #- name: Clone and Build Vulkan-MemoryModel
    #- name: Clone and Build SPIRV-Cross